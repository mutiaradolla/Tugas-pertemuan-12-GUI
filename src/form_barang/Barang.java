package form_barang;


import javax.swing.JOptionPane;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author ACER
 */
public class Barang extends javax.swing.JFrame {
    static final String JDBC_DRIVER = "com.mysql.cj.jdbc.Driver";
    static final String DB_URL = "jdbc:mysql://127.0.0.1/penjualan";
    static final String USER = "root";
    static final String PASS = "";
    
    static Connection conn;
    static Statement stmt;
    static ResultSet rs;

    /**
     * Creates new form Barang
     */
    public Barang() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtKode = new javax.swing.JTextField();
        txtNamaBrg = new javax.swing.JTextField();
        txtSatuan = new javax.swing.JTextField();
        txtStokMin = new javax.swing.JTextField();
        txtStok = new javax.swing.JTextField();
        tblSimpan = new javax.swing.JButton();
        tblUpdate = new javax.swing.JButton();
        tblDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableData = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Kode Barang");

        jLabel2.setText("Nama Barang");

        jLabel3.setText("Satuan");

        jLabel4.setText("Stok Minimal");

        jLabel5.setText("Stok Barang");

        tblSimpan.setText("Simpan");
        tblSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tblSimpanActionPerformed(evt);
            }
        });

        tblUpdate.setText("Edit");
        tblUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tblUpdateActionPerformed(evt);
            }
        });

        tblDelete.setText("Hapus");
        tblDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tblDeleteActionPerformed(evt);
            }
        });

        tableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableData);

        jScrollPane3.setViewportView(jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tblDelete)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtKode, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNamaBrg, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSatuan, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtStok))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtStokMin, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tblSimpan)
                                .addGap(18, 18, 18)
                                .addComponent(tblUpdate)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addGap(72, 72, 72))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtKode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtNamaBrg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtSatuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtStokMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtStok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tblSimpan)
                                    .addComponent(tblUpdate)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(tblDelete)
                        .addContainerGap(26, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tblSimpanActionPerformed
        // TODO add your handling code here:
         String kode = txtKode.getText().toString().trim();
        int stok = Integer.parseInt(txtStok.getText());
        String nama = txtNamaBrg.getText();
        String satuan = txtSatuan.getText().toString().trim();
        int stok_min = Integer.parseInt(txtStokMin.getText());
        insert(kode,nama,satuan,stok,stok_min);

        cleardata();
        showtable();
    }//GEN-LAST:event_tblSimpanActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        showtable();
    }//GEN-LAST:event_formWindowOpened

    private void tblUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tblUpdateActionPerformed
        // TODO add your handling code here:
        String kode = txtKode.getText().toString().trim();
        String nama = txtNamaBrg.getText();
        String satuan = txtSatuan.getText();
        int stok = Integer.parseInt(txtStok.getText());
        int stok_min = Integer.parseInt(txtStokMin.getText());
        update(kode,nama,satuan,stok,stok_min);
        showtable();
        cleardata();
    }//GEN-LAST:event_tblUpdateActionPerformed

    private void tblDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tblDeleteActionPerformed
        // TODO add your handling code here:
        cleardata();
    }//GEN-LAST:event_tblDeleteActionPerformed

    private void tableDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDataMouseClicked
        // TODO add your handling code here:
//        tblSimpan.setEnabled(false);
        getData();
    }//GEN-LAST:event_tableDataMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Barang().setVisible(true);
            }
        });
    }
    
    public void cleardata(){
        txtKode.setText("");
        txtNamaBrg.setText("");
        txtSatuan.setText("");
        txtStok.setText("");
        txtStokMin.setText("");
    }
    
    
    public void update(String kode, String nm_barang, String satuan, int stok, int stok_min){
        try {
            Class.forName(JDBC_DRIVER);
   
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
 
            stmt = conn.createStatement();
            
            // Meminta input ID data yang akan diupdate atau dihapus
            int id = Integer.parseInt(JOptionPane.showInputDialog(null, "Masukkan ID data:"));

            // Menampilkan opsi update atau delete
            String[] options = {"Update", "Delete"};
            int choice = JOptionPane.showOptionDialog(null, "Pilih opsi:", "Update/Delete Data", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);

            if (choice == 0) {
                //Prohram untuk update data
                String newValue = JOptionPane.showInputDialog(null, "Masukkan nilai stok barang baru:");
                String updateQuery = "UPDATE barang2 SET stok_brg = '" + newValue + "' WHERE id = " + id;
                int rowsUpdated = stmt.executeUpdate(updateQuery);
                if (rowsUpdated > 0) {
                    JOptionPane.showMessageDialog(null, "Data berhasil diupdate.");
                } else {
                    JOptionPane.showMessageDialog(null, "Gagal mengupdate data.");
                }
            } else if (choice == 1) {
                //Prohram untuk delete data
                String deleteQuery = "DELETE FROM barang2 WHERE id = " + id;
                int rowsDeleted = stmt.executeUpdate(deleteQuery);
                if (rowsDeleted > 0) {
                    JOptionPane.showMessageDialog(null, "Data berhasil dihapus.");
                } else {
                    JOptionPane.showMessageDialog(null, "Gagal menghapus data.");
                }
            }
            
            stmt.close();
            conn.close();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public void getData(){
        int baris = tableData.getSelectedRow();
        txtKode.setText(String.valueOf(tableData.getValueAt(baris,1)));
        txtNamaBrg.setText(String.valueOf(tableData.getValueAt(baris,2)));
        txtSatuan.setText(String.valueOf(tableData.getValueAt(baris, 3)));
        txtStok.setText(String.valueOf(tableData.getValueAt(baris, 4)));
        txtStokMin.setText(String.valueOf(tableData.getValueAt(baris, 5)));
    }
    
    public void insert(String kode, String nm_barang, String satuan, int stok, int stok_min){
        try {
            Class.forName(JDBC_DRIVER);
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
//            stmt = conn.createStatement();
            
            //mengecek apakah kode barang sudah ada
            String checkSql = "Select Count(*) From barang2 Where kode_brg = ?";
            PreparedStatement checkStmt = conn.prepareStatement(checkSql);
            checkStmt.setString(1, kode);
            ResultSet rs = checkStmt.executeQuery();
            rs.next();
            int count = rs.getInt(1);
            rs.close();
            
            if(count > 0){
                //jika kode barang sudah ada, maka tampilkan message
                JOptionPane.showMessageDialog(null, "Kode barang ini Sudah ada", "Error", JOptionPane.ERROR_MESSAGE);
            }
            else{
                //jika kode barang yg diinput belum tercantum
                String insertSql = "Insert Into barang2 (kode_brg,nm_brg,satuan,stok_brg,stok_min) VALUES (?,?,?,?,?)"; 
                PreparedStatement ps = conn.prepareStatement(insertSql);
                ps.setString(1, kode);
                ps.setString(2,nm_barang);
                ps.setString(3, satuan);
                ps.setInt(4, stok);
                ps.setInt(5,stok_min);
            
                ps.execute();
                
                JOptionPane.showMessageDialog(null, "Barang berhasil disimpan");
            }
            
            stmt.close();
            conn.close();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }
    
    public void showtable()
	{

		try {
			Class.forName(JDBC_DRIVER);			   
                        conn = DriverManager.getConnection(DB_URL, USER, PASS);
                        DefaultTableModel model = new DefaultTableModel();
                        model.addColumn("No");
                        model.addColumn("Kode Barang");
                        model.addColumn("Nama Barang");
                        model.addColumn("Satuan");
                        model.addColumn("Stok Barang");
                        model.addColumn("Stok Minimal");

                        stmt = conn.createStatement();
                        String sql = "SELECT * FROM barang2";
                        int i = 1;
                        rs = stmt.executeQuery(sql);
                        while(rs.next()) {
                            model.addRow(new Object[] {
                                    i,
                                    rs.getString("kode_brg"),
                                    rs.getString("nm_brg"),
                                    rs.getString("satuan"),
                                    rs.getInt("stok_brg"),
                                    rs.getInt("stok_min"),
                            });
                            i++;
                        }
                        rs.close();
                        conn.close();
                        stmt.close();

                        tableData.setModel(model);
           
		}
		catch(Exception e) {
			e.printStackTrace();
		}
        
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tableData;
    private javax.swing.JButton tblDelete;
    private javax.swing.JButton tblSimpan;
    private javax.swing.JButton tblUpdate;
    private javax.swing.JTextField txtKode;
    private javax.swing.JTextField txtNamaBrg;
    private javax.swing.JTextField txtSatuan;
    private javax.swing.JTextField txtStok;
    private javax.swing.JTextField txtStokMin;
    // End of variables declaration//GEN-END:variables
}
